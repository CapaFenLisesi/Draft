let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <expr> <Plug>(neocomplete_start_unite_complete) unite#sources#neocomplete#start_complete()
inoremap <silent> <expr> <Plug>(neocomplete_start_unite_quick_match) unite#sources#neocomplete#start_quick_match()
inoremap <silent> <Plug>(neocomplete_start_omni_complete) 
inoremap <silent> <Plug>(neocomplete_start_auto_complete) =neocomplete#mappings#auto_complete()
inoremap <silent> <Plug>(neocomplete_start_manual_complete) =neocomplete#mappings#manual_complete()
inoremap <silent> <Plug>(neocomplete_auto_refresh) =neocomplete#mappings#refresh()
inoremap <S-Tab> 
cnoremap <C-F4> c
inoremap <C-F4> c
cnoremap <C-Tab> w
inoremap <silent> <C-Tab> =UltiSnips#ListSnippets()
cnoremap <M-Space> :simalt ~
inoremap <M-Space> :simalt ~
cmap <S-Insert> +
imap <S-Insert> 
xnoremap  ggVG
snoremap  gggHG
onoremap  gggHG
nnoremap  gggHG
vnoremap  "+y
snoremap <silent>  c
noremap  
snoremap  "_c
nnoremap  :update
vnoremap  :update
onoremap  :update
nmap  "+gP
omap  "+gP
vnoremap  "+x
noremap  
noremap  u
nnoremap 0 ^
inoremap <silent> Â² =UltiSnips#ExpandSnippet()
inoremap Â  :simalt ~
cnoremap Â  :simalt ~
inoremap <silent> Â¸ =UltiSnips#ExpandSnippet()
nmap Q gq
xmap Q gq
omap Q gq
xmap [% [%m'gv``
nmap <silent> \ig <Plug>IndentGuidesToggle
xmap ]% ]%m'gv``
nnoremap ^ 0
xmap a% [%v]%
xmap gx <Plug>NetrwBrowseXVis
nmap gx <Plug>NetrwBrowseX
nnoremap gj j
nnoremap gk k
nnoremap j gj
nnoremap k gk
nmap zuz <Plug>(FastFoldUpdate)
nmap <S-Insert> "+gP
nnoremap <C-Tab> w
nnoremap <C-F4> c
vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())
snoremap <silent> <Del> c
snoremap <silent> <BS> c
snoremap <silent> <C-Tab> :call UltiSnips#ListSnippets()
nnoremap <silent> <Plug>(FastFoldUpdate) :FastFoldUpdate!
onoremap <C-F4> c
vnoremap <C-F4> c
onoremap <C-Tab> w
xnoremap <C-Tab> w
noremap <M-Space> :simalt ~
vmap <S-Insert> 
xnoremap <BS> d
vmap <C-Del> "*d
vnoremap <S-Del> "+x
vnoremap <C-Insert> "+y
omap <S-Insert> "+gP
cnoremap  gggHG
inoremap  gggHG
inoremap <expr> 	 pumvisible() ? "\" : "\	"
inoremap  :update
inoremap  u
cmap  +
inoremap  
inoremap  u
snoremap <silent> Â² :call UltiSnips#ExpandSnippet()
xnoremap <silent> Â² :call UltiSnips#SaveLastVisualSelection()gvs
noremap Â  :simalt ~
xnoremap <silent> Â¸ :call UltiSnips#SaveLastVisualSelection()gvs
snoremap <silent> Â¸ :call UltiSnips#ExpandSnippet()
let &cpo=s:cpo_save
unlet s:cpo_save
set background=dark
set backspace=indent,eol,start
set backup
set backupdir=~\\vim-backup-file,C:\\Users\\WE707B~1.TAP\\AppData\\Local\\Temp,c:\\tmp,c:\\temp
set completeopt=preview,menuone
set diffexpr=MyDiff()
set encoding=utf-8
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set guifont=Anonymous_Pro:h11:cANSI:qDRAFT
set helplang=En
set hlsearch
set ignorecase
set incsearch
set keymodel=startsel,stopsel
set langnoremap
set ruler
set runtimepath=~/vimfiles,D:\\App\\Vim\\vimfiles\\bundle\\Vundle.vim,D:\\App\\Vim\\vimfiles\\bundle\\vimtex,D:\\App\\Vim\\vimfiles\\bundle\\neocomplete.vim,D:\\App\\Vim\\vimfiles\\bundle\\FastFold,D:\\App\\Vim\\vimfiles\\bundle\\vim-indent-guides,D:\\App\\Vim\\vimfiles\\bundle\\ultisnips,D:\\App\\Vim\\vimfiles\\bundle\\vim-snippets,D:\\App\\Vim/vimfiles,D:\\App\\Vim\\vim74,D:\\App\\Vim\\vim74\\pack\\dist\\opt\\matchit,D:\\App\\Vim/vimfiles/after,~/vimfiles/after,D:\\App\\Vim/vimfiles/bundle/Vundle.vim/,D:\\App\\Vim\\vimfiles\\bundle\\Vundle.vim/after,D:\\App\\Vim\\vimfiles\\bundle\\vimtex/after,D:\\App\\Vim\\vimfiles\\bundle\\neocomplete.vim/after,D:\\App\\Vim\\vimfiles\\bundle\\FastFold/after,D:\\App\\Vim\\vimfiles\\bundle\\vim-indent-guides/after,D:\\App\\Vim\\vimfiles\\bundle\\ultisnips/after,D:\\App\\Vim\\vimfiles\\bundle\\vim-snippets/after
set scrolloff=1
set selection=exclusive
set selectmode=mouse,key
set shiftwidth=4
set smartcase
set smartindent
set suffixes=.bak,~,.o,.h,.info,.swp,.obj,.asv
set tabstop=4
set whichwrap=b,s,<,>,[,]
set window=39
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~\Desktop\Draft\Green\ function\1D\ QAHI\ Conductance
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +2 T_vs_E_and_Gammaz_SpinSx_1DQAHI.m
badd +6 ScatteringM.m
badd +4 GreenF.m
badd +8 g11.m
badd +74 H_lead.m
badd +15 V_lead.m
badd +6 Hierarchical\ structure\ of\ the\ program.markdown
badd +64 ~\temp.markdown
badd +15 ScatteringM_x_dupe.m
badd +4 V_dl.m
badd +12 V_sample.m
badd +10 H_sample.m
argglobal
silent! argdel *
edit T_vs_E_and_Gammaz_SpinSx_1DQAHI.m
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 80 + 79) / 158)
exe 'vert 2resize ' . ((&columns * 77 + 79) / 158)
argglobal
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'matlab'
setlocal filetype=matlab
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=GetMatlabIndent(v:lnum)
setlocal indentkeys=!,o,O=end,=case,=else,=elseif,=otherwise,=catch
setlocal noinfercase
setlocal iskeyword=@,48-57,_,128-167,224-235
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.m
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'matlab'
setlocal syntax=matlab
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 3 - ((2 * winheight(0) + 19) / 38)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
3
normal! 0
wincmd w
argglobal
edit Hierarchical\ structure\ of\ the\ program.markdown
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=fb:*,fb:-,fb:+,n:>
setlocal commentstring=>\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'markdown'
setlocal filetype=markdown
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcqln
setlocal formatlistpat=^\\s*\\d\\+\\.\\s\\+\\|^[-*+]\\s\\+
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,128-167,224-235
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=htmlcomplete#CompleteTags
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'markdown'
setlocal syntax=markdown
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 6 - ((5 * winheight(0) + 19) / 38)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
6
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 80 + 79) / 158)
exe 'vert 2resize ' . ((&columns * 77 + 79) / 158)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
